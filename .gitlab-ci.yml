image: gcc

before_script:
  - apt-get update --yes
  - apt-get install --yes cmake
  - apt-get install --yes libgtest-dev
  - git clone https://github.com/linux-test-project/lcov.git
  - cd lcov && make install && cd ..
  - lcov --version

variables:
  PROG: main.out
  UNIT: unit.out
  VALGRIND_LOG: "valgrind.log"
  COVER_LOG: "cover.log"
  STRESS_LOG: "stress.log"
  PROC_RANGE: 5

  NO_LOST_PATTERN: "All heap blocks were freed -- no leaks are possible"
  NO_ERROR_PATTERN: "ERROR SUMMARY: 0 errors"


stages:
  - test_style
  - build
  - test

test_style:
  stage: test_style
  script:
    - apt-get install --yes cppcheck
    - ./cppcheck.sh

build:
  stage: build
  script:
    - git submodule init
    - git submodule update
    - mkdir build
    - cd build
    - cmake ..
    - make
  artifacts:
    paths:
      - "./build"
      - "./cmake-modules"

unit_test:
  stage: test
  script:
    - cd build
    - ./${UNIT}
  needs: ["build"]

test_mem:
  stage: test
  script:
    - apt-get update && apt-get install -y valgrind
    - valgrind --tool=memcheck --leak-check=summary --log-file=${VALGRIND_LOG} ./build/${UNIT}
    - export NO_LOST=$(grep "${NO_LOST_PATTERN}" ${VALGRIND_LOG})
    - export NO_ERROR=$(grep "${NO_ERROR_PATTERN}" ${VALGRIND_LOG})
    - if [ -z "${NO_LOST}" ] || [ -z "${NO_ERROR}" ]; then cat ${VALGRIND_LOG}; exit 1; fi
  artifacts:
    paths:
      - ./${VALGRIND_LOG}
  needs: ["build"]

stress_test:
  stage: test
  script:
    - apt-get install time
    - cd utils
    - ./stress_tests.sh ${PROC_RANGE}>${STRESS_LOG} 2>&1
    - cat ${STRESS_LOG}
  artifacts:
    paths:
      - ./utils/${STRESS_LOG}
  needs:
    - job: build


coverage:
  stage: test
  script:
    - cd build && cmake -DCMAKE_BUILD_TYPE=Debug ..
    - make codeCoverage > ${COVER_LOG}
    - cat cover.log
  artifacts:
    paths:
      - ./build/${COVER_LOG}
  needs: ["build"]
